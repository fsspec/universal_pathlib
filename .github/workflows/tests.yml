name: Tests

on:
  push:
    branches: [main]
  pull_request:
  workflow_dispatch:

env:
  FORCE_COLOR: "1"

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  tests:
    timeout-minutes: 10
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04, windows-latest, macos-latest]
        pyv: ['3.8', '3.9', '3.10', '3.11', '3.12']
        fsspec: ['']

        include:
          - os: ubuntu-20.04
            pyv: '3.8'
            fsspec: 'minversion'

    steps:
    - name: Check out the repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Set up Python ${{ matrix.pyv }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.pyv }}

    - name: Upgrade pip and nox
      run: |
        python -m pip install --upgrade pip nox
        pip --version
        nox --version

    - name: Run tests
      run: nox -s tests-${{ matrix.fsspec || matrix.pyv }} -- --cov-report=xml

  lint:
    runs-on: ubuntu-latest

    steps:
    - name: Check out the repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Set up Python ${{ matrix.pyv }}
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Upgrade pip and nox
      run: |
        python -m pip install --upgrade pip nox
        pip --version
        nox --version

    - name: Lint code and check dependencies
      run: nox -s lint safety

  build:
    needs: [tests, lint]
    runs-on: ubuntu-latest
    steps:
    - name: Check out the repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Set up Python ${{ matrix.pyv }}
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip nox
        pip --version
        nox --version

    - name: Build package
      run: nox -s build
